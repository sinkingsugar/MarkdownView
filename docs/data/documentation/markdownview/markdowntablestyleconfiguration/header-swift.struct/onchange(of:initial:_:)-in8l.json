{"abstract":[{"text":"Adds a modifier for this view that fires an action when a specific","type":"text"},{"text":" ","type":"text"},{"text":"value changes.","type":"text"}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@","kind":"attribute"},{"preciseIdentifier":"s:ScM","text":"MainActor","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onChange","kind":"identifier"},{"text":"<","kind":"text"},{"text":"E","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"of","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"value","kind":"internalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp","text":"E","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initial","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":" = false, ","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"action","kind":"internalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"attribute"},{"text":" () -> ","kind":"text"},{"preciseIdentifier":"s:s4Voida","text":"Void","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"preciseIdentifier":"s:7SwiftUI4ViewP","text":"View","kind":"typeIdentifier"},{"text":" ","kind":"text"},{"text":"where","kind":"keyword"},{"text":" ","kind":"text"},{"text":"E","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:SQ","text":"Equatable","kind":"typeIdentifier"},{"text":"\n","kind":"text"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"},{"parameters":[{"name":"value","content":[{"inlineContent":[{"text":"The value to check against when determining whether","type":"text"},{"text":" ","type":"text"},{"text":"to run the closure.","type":"text"}],"type":"paragraph"}]},{"name":"initial","content":[{"inlineContent":[{"type":"text","text":"Whether the action should be run when this view initially"},{"type":"text","text":" "},{"type":"text","text":"appears."}],"type":"paragraph"}]},{"name":"action","content":[{"inlineContent":[{"text":"A closure to run when the value changes.","type":"text"}],"type":"paragraph"}]}],"kind":"parameters"},{"kind":"content","content":[{"text":"Return Value","anchor":"return-value","level":2,"type":"heading"},{"inlineContent":[{"text":"A view that fires an action when the specified value changes.","type":"text"}],"type":"paragraph"}]},{"kind":"content","content":[{"anchor":"discussion","text":"Discussion","type":"heading","level":2},{"inlineContent":[{"text":"You can use ","type":"text"},{"code":"onChange","type":"codeVoice"},{"text":" to trigger a side effect as the result of a","type":"text"},{"text":" ","type":"text"},{"text":"value changing, such as an ","type":"text"},{"code":"Environment","type":"codeVoice"},{"text":" key or a ","type":"text"},{"code":"Binding","type":"codeVoice"},{"text":".","type":"text"}],"type":"paragraph"},{"inlineContent":[{"type":"text","text":"The system may call the action closure on the main actor, so avoid"},{"type":"text","text":" "},{"type":"text","text":"long-running tasks in the closure. If you need to perform such tasks,"},{"type":"text","text":" "},{"type":"text","text":"detach an asynchronous background task."}],"type":"paragraph"},{"inlineContent":[{"text":"When the value changes, the new version of the closure will be called,","type":"text"},{"text":" ","type":"text"},{"text":"so any captured values will have their values from the time that the","type":"text"},{"text":" ","type":"text"},{"text":"observed value has its new value. In the following code example,","type":"text"},{"text":" ","type":"text"},{"code":"PlayerView","type":"codeVoice"},{"text":" calls into its model when ","type":"text"},{"code":"playState","type":"codeVoice"},{"text":" changes model.","type":"text"}],"type":"paragraph"},{"code":["struct PlayerView: View {","    var episode: Episode","    @State private var playState: PlayState = .paused","","    var body: some View {","        VStack {","            Text(episode.title)","            Text(episode.showTitle)","            PlayButton(playState: $playState)","        }","        .onChange(of: playState) {","            model.playStateDidChange(state: playState)","        }","    }","}"],"syntax":null,"type":"codeListing"}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/markdownview\/markdowntablestyleconfiguration\/header-swift.struct\/onchange(of:initial:_:)-in8l"]}],"hierarchy":{"paths":[["doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyle","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration\/Header-swift.struct","doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration\/Header-swift.struct\/View-Implementations"]]},"kind":"symbol","sections":[],"identifier":{"url":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration\/Header-swift.struct\/onChange(of:initial:_:)-in8l","interfaceLanguage":"swift"},"metadata":{"symbolKind":"method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp","kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":", () -> ","kind":"text"},{"text":"Void","kind":"typeIdentifier","preciseIdentifier":"s:s4Voida"},{"text":") -> ","kind":"text"},{"text":"some","kind":"keyword"},{"text":" ","kind":"text"},{"text":"View","kind":"typeIdentifier","preciseIdentifier":"s:7SwiftUI4ViewP"}],"extendedModule":"SwiftUICore","modules":[{"relatedModules":["SwiftUICore"],"name":"MarkdownView"}],"externalID":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lF::SYNTHESIZED::s:12MarkdownView0A23TableStyleConfigurationV6HeaderV","role":"symbol","title":"onChange(of:initial:_:)","platforms":[{"beta":false,"deprecated":false,"name":"iOS","introducedAt":"14.0","deprecatedAt":"17.0","unavailable":false},{"beta":false,"deprecated":false,"name":"macOS","introducedAt":"11.0","deprecatedAt":"14.0","unavailable":false},{"beta":false,"deprecated":false,"name":"tvOS","introducedAt":"14.0","deprecatedAt":"17.0","unavailable":false},{"beta":false,"deprecated":false,"name":"watchOS","introducedAt":"7.0","deprecatedAt":"10.0","unavailable":false}],"roleHeading":"Instance Method"},"schemaVersion":{"major":0,"minor":3,"patch":0},"references":{"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableStyle":{"navigatorTitle":[{"kind":"identifier","text":"MarkdownTableStyle"}],"abstract":[{"type":"text","text":"A type that applies a cutsom appearance to all tables created by MarkdownView within the view hierarchy."}],"type":"topic","role":"symbol","url":"\/documentation\/markdownview\/markdowntablestyle","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkdownTableStyle"}],"title":"MarkdownTableStyle","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyle","kind":"symbol"},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableStyleConfiguration":{"title":"MarkdownTableStyleConfiguration","role":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MarkdownTableStyleConfiguration"}],"kind":"symbol","type":"topic","abstract":[{"text":"The properties of a markdown table.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"MarkdownTableStyleConfiguration"}],"url":"\/documentation\/markdownview\/markdowntablestyleconfiguration","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration"},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableStyleConfiguration/Header-swift.struct/View-Implementations":{"abstract":[],"role":"collectionGroup","type":"topic","kind":"article","title":"View Implementations","url":"\/documentation\/markdownview\/markdowntablestyleconfiguration\/header-swift.struct\/view-implementations","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration\/Header-swift.struct\/View-Implementations"},"doc://markdownview.MarkdownView/documentation/MarkdownView":{"abstract":[{"text":"Display markdown content with SwiftUI.","type":"text"}],"title":"MarkdownView","type":"topic","kind":"symbol","url":"\/documentation\/markdownview","identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView","role":"collection"},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableStyleConfiguration/Header-swift.struct/onChange(of:initial:_:)-in8l":{"url":"\/documentation\/markdownview\/markdowntablestyleconfiguration\/header-swift.struct\/onchange(of:initial:_:)-in8l","abstract":[{"text":"Adds a modifier for this view that fires an action when a specific","type":"text"},{"text":" ","type":"text"},{"text":"value changes.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"onChange"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"E"},{"kind":"text","text":">("},{"kind":"externalParam","text":"of"},{"kind":"text","text":": "},{"preciseIdentifier":"s:7SwiftUI4ViewP08MarkdownC0E8onChange2of7initial_Qrqd___SbyyctSQRd__lFQO1Eqd__mfp","kind":"typeIdentifier","text":"E"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initial"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sb","kind":"typeIdentifier","text":"Bool"},{"kind":"text","text":", () -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") -> "},{"kind":"keyword","text":"some"},{"kind":"text","text":" "},{"preciseIdentifier":"s:7SwiftUI4ViewP","kind":"typeIdentifier","text":"View"}],"identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration\/Header-swift.struct\/onChange(of:initial:_:)-in8l","deprecated":true,"kind":"symbol","title":"onChange(of:initial:_:)","type":"topic"},"doc://markdownview.MarkdownView/documentation/MarkdownView/MarkdownTableStyleConfiguration/Header-swift.struct":{"identifier":"doc:\/\/markdownview.MarkdownView\/documentation\/MarkdownView\/MarkdownTableStyleConfiguration\/Header-swift.struct","title":"MarkdownTableStyleConfiguration.Header","abstract":[{"text":"A type-erased table header row.","type":"text"}],"navigatorTitle":[{"text":"Header","kind":"identifier"}],"type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Header","kind":"identifier"}],"role":"symbol","kind":"symbol","url":"\/documentation\/markdownview\/markdowntablestyleconfiguration\/header-swift.struct"}}}